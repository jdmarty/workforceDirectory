{"version":3,"sources":["util/API.js","components/TableRow/index.js","components/SortColumn/index.js","components/Table/index.js","components/Selector/index.js","App.js","reportWebVitals.js","index.js"],"names":["API","getRandomUser","axios","get","getMultipleUsers","count","TableRow","props","registerDate","Date","registered","toDateString","className","src","thumbnail","alt","name","first","last","username","location","street","number","city","country","email","phone","age","SortColumn","children","onClick","data-direction","direction","data-column","column","arrow","Table","users","scope","sort","reg","map","user","index","picture","login","dob","date","Selector","htmlFor","type","placeholder","value","filter","onChange","onFilter","countries","cities","onReset","onGenerate","max","onCountChange","userCount","App","useState","setUserCount","setUsers","targetUsers","setTargetUsers","setFilter","setSort","setCountries","setCities","useEffect","then","res","data","results","mapCountries","mapCities","catch","err","console","log","uniqueCountries","Set","uniqueCities","e","newFilter","target","targets","match","RegExp","preventDefault","newCount","newSort","dataset","a","b","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7365fe20.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\r\nconst API = {\r\n    getRandomUser: function() {\r\n        return axios.get(\"https://randomuser.me/api/\")\r\n    },\r\n    getMultipleUsers: function(count) {\r\n        return axios.get(`https://randomuser.me/api/?results=${count}`);\r\n    }\r\n}\r\n\r\nexport default API","import React from \"react\";\r\n\r\nfunction TableRow(props) {\r\n  const registerDate = new Date(props.registered).toDateString()\r\n  return (\r\n    <tr>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex-shrink-0 h-10 w-10\">\r\n            <img\r\n              className=\"h-10 w-10 rounded-full\"\r\n              src={props.thumbnail}\r\n              alt={props.name.first + \" \" + props.name.last}\r\n            ></img>\r\n          </div>\r\n          <div className=\"ml-4\">\r\n            <div className=\"text-sm font-medium text-gray-900\">\r\n              {props.name.first + \" \" + props.name.last}\r\n            </div>\r\n            <div className=\"text-sm text-gray-500\">{props.username}</div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n        <div className=\"text-sm text-gray-900\">\r\n          {props.location.street.number + \" \" + props.location.street.name}\r\n        </div>\r\n        <div className=\"text-sm text-gray-500\">\r\n          {props.location.city + \", \" + props.location.country}\r\n        </div>\r\n      </td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n        <div className=\"text-sm text-gray-500\">{props.email}</div>\r\n        <div className=\"text-sm text-gray-500\">{props.phone}</div>\r\n      </td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n        <div className=\"text-sm text-gray-500\">{props.age}</div>\r\n      </td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n        <div className=\"text-sm text-gray-500\">{registerDate}</div>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TableRow;\r\n","import React from \"react\";\r\n\r\nfunction SortColumn(props) {\r\n  return (\r\n    <div>\r\n      {props.children}\r\n      <span\r\n        className=\"mx-2 cursor-pointer\"\r\n        onClick={props.onClick}\r\n        data-direction={props.direction}\r\n        data-column={props.column}\r\n      >\r\n        {props.arrow}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SortColumn;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../../util/API\";\r\nimport TableRow from \"../TableRow\";\r\nimport SortColumn from \"../SortColumn\"\r\n\r\nfunction Table(props) {\r\n  // Map users into rows\r\n  const renderRows = (users) => {\r\n    return users.map((user, index) => {\r\n      return (\r\n        <TableRow\r\n          thumbnail={user.picture.thumbnail}\r\n          name={user.name}\r\n          username={user.login.username}\r\n          email={user.email}\r\n          phone={user.phone}\r\n          location={user.location}\r\n          age={user.dob.age}\r\n          registered={user.registered.date}\r\n          key={index}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n      <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n        <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-indigo-100 border-indigo-300 border-2\">\r\n              <tr>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left font-medium text-gray-500 uppercase tracking-wider\"\r\n                >\r\n                  Name\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left font-medium text-gray-500 uppercase tracking-wider\"\r\n                >\r\n                  Address\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left font-medium text-gray-500 uppercase tracking-wider\"\r\n                >\r\n                  Contact\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left font-medium text-gray-500 tracking-wider\"\r\n                >\r\n                  <SortColumn\r\n                    column=\"age\"\r\n                    arrow={\r\n                      props.sort.age === \"asc\"\r\n                        ? \"^\"\r\n                        : props.sort.age === \"desc\"\r\n                        ? \"v\"\r\n                        : \"--\"\r\n                    }\r\n                    onClick={props.onClick}\r\n                  >\r\n                    AGE\r\n                  </SortColumn>\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left font-medium text-gray-500 tracking-wider\"\r\n                >\r\n                  <SortColumn\r\n                    column=\"reg\"\r\n                    arrow={\r\n                      props.sort.reg === \"asc\"\r\n                        ? \"^\"\r\n                        : props.sort.reg === \"desc\"\r\n                        ? \"v\"\r\n                        : \"--\"\r\n                    }\r\n                    onClick={props.onClick}\r\n                  >\r\n                    REGISTERED\r\n                  </SortColumn>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {renderRows(props.users)}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nfunction Selector(props) {\r\n  return (\r\n    <form className=\"bg-gray-300 py-2\">\r\n      <div className=\"grid lg:grid-cols-4 grid-cols-2 gap-4 py-2 flex\">\r\n        <h1 className=\"lg:col-span-4 col-span-2 text-center text-xl underline\">\r\n          SEARCH OPTIONS\r\n        </h1>\r\n        <div className=\"flex justify-center\">\r\n          <label className=\"px-2\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            className=\"border-2 border-black rounded-md shadow-xl w-1/2\"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={props.filter.name}\r\n            onChange={props.onFilter}\r\n          ></input>\r\n        </div>\r\n        <div className=\"flex justify-center\">\r\n          <label className=\"px-2\" htmlFor=\"username\">\r\n            Username\r\n          </label>\r\n          <input\r\n            className=\"border-2 border-black rounded-md shadow-xl w-1/2\"\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            value={props.filter.username}\r\n            onChange={props.onFilter}\r\n          ></input>\r\n        </div>\r\n        <div className=\"flex justify-center\">\r\n          <label className=\"px-2\" htmlFor=\"country\">\r\n            Country\r\n          </label>\r\n          <select\r\n            className=\"border-2 border-black rounded-md shadow-xl w-1/2\"\r\n            name=\"country\"\r\n            value={props.filter.country}\r\n            onChange={props.onFilter}\r\n          >\r\n            <option value=\"\">All</option>\r\n            {props.countries.map((country, index) => {\r\n              return (\r\n                <option value={country} key={country + index}>\r\n                  {country}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"flex justify-center\">\r\n          <label className=\"px-2\" htmlFor=\"country\">\r\n            City\r\n          </label>\r\n          <select\r\n            className=\"border-2 border-black rounded-md shadow-xl w-1/2\"\r\n            name=\"city\"\r\n            value={props.filter.city}\r\n            onChange={props.onFilter}\r\n          >\r\n            <option value=\"\">All</option>\r\n            {props.cities.map((city, index) => {\r\n              return (\r\n                <option value={city} key={city + index}>\r\n                  {city}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"lg:col-span-4 col-span-2 flex justify-center\">\r\n          <button\r\n            className=\"border-2 border-black rounded-md p-1 bg-pink-300 shadow-xl mx-2\"\r\n            onClick={props.onReset}\r\n          >\r\n            Reset Search\r\n          </button>\r\n          <div className=\"border-2 border-black rounded-md p-1 bg-blue-300 shadow-xl\">\r\n            <button onClick={props.onGenerate}>Generate Users</button>\r\n            <input\r\n              className=\"w-16 mx-2 rounded-md text-center\"\r\n              type=\"number\"\r\n              max=\"1000\"\r\n              onChange={props.onCountChange}\r\n              value={props.userCount}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Selector;\r\n","import { useEffect, useState } from \"react\";\nimport API from \"./util/API\"\nimport Table from \"./components/Table\"\nimport Selector from \"./components/Selector\"\n\nfunction App() {\n  const [userCount, setUserCount] = useState(100)\n  const [users, setUsers] = useState([]);\n  const [targetUsers, setTargetUsers] = useState([]);\n  const [filter, setFilter] = useState({\n    name: \"\",\n    username: \"\",\n    country: \"\",\n    city: \"\"\n  });\n  const [sort, setSort] = useState({\n    age: \"\",\n    reg: \"\"\n  });\n  const [countries, setCountries] = useState([]);\n  const [cities, setCities] = useState([]);\n\n  // Hook to get the initial list of users\n  useEffect(() => {\n    API.getMultipleUsers(100)\n      .then((res) => {\n        // set users and target users\n        setUsers(res.data.results);\n        setTargetUsers(res.data.results);\n        // get a list of countries and cities\n        mapCountries(res.data.results);\n        mapCities(res.data.results);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  // function to create countries map\n  const mapCountries = users => {\n    const countries =  users.map((user) => {\n      return user.location.country;\n    });\n    const uniqueCountries = [...new Set(countries)]\n    setCountries(uniqueCountries)\n  }\n\n  // function to create cities map\n  const mapCities = (users) => {\n    const cities = users.map((user) => {\n      return user.location.city;\n    });\n    const uniqueCities = [...new Set(cities)];\n    setCities(uniqueCities);\n  };\n\n  // Handle Input change\n  const handleFilterChange = e => {\n    // set values on new filter\n    const newFilter = filter;\n    newFilter[e.target.name] = e.target.value\n    setFilter(newFilter);\n    \n    let targets = users;\n\n    // filter by name\n    if (filter.name) {\n      targets = targets.filter((user) => {\n        return (\n          user.name.first.match(new RegExp(filter.name, \"gi\")) ||\n          user.name.last.match(new RegExp(filter.name, \"gi\"))\n        );\n      });\n    }\n\n    // filter by username\n    if (filter.username) {\n      targets = targets.filter((user) => {\n        return user.login.username.match(new RegExp(filter.username, \"gi\"));\n      });\n    }\n\n    // filter by country\n    if (filter.country) {\n      targets = targets.filter((user) => {\n        return user.location.country.match(\n          new RegExp(filter.country, \"gi\")\n        );\n      });\n    }\n\n    // filter by city\n    if (filter.city) {\n      targets = targets.filter((user) => {\n        return user.location.city.match(new RegExp(filter.city, \"gi\"));\n      });\n    }\n    \n    //set targets\n    setTargetUsers(targets);\n\n    //set countries to only include users that still match\n    mapCountries(targets);\n    mapCities(targets);\n  }\n\n  // Handle Reset Click\n  const handleResetClick = e => {\n    e.preventDefault();\n    // set sort, filter, and target users back to defaults\n    setSort({\n      age: \"\",\n      reg: \"\"\n    })\n    setFilter({\n      name: \"\",\n      username: \"\",\n      country: \"\",\n      city: \"\",\n    });\n    setTargetUsers(users)\n  }\n\n  // Handle User Count Change\n  const handleUserCountChange = e => {\n    const newCount = e.target.value\n    setUserCount(newCount)\n  }\n\n  // Handle User Generate Click\n  const handleGenerateClick = e => {\n    e.preventDefault()\n    API.getMultipleUsers(userCount)\n      .then((res) => {\n        // set users and target users\n        setUsers(res.data.results);\n        setTargetUsers(res.data.results);\n        // get a list of countries and cities\n        mapCountries(res.data.results);\n        mapCities(res.data.results);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Handle Sort Click\n  const handleSortClick = e => {\n    // set a new sort object\n    let newSort = {...sort}\n    if ((newSort[e.target.dataset.column] === \"asc\")) {\n      newSort[e.target.dataset.column] = \"desc\";\n    } else if (newSort[e.target.dataset.column] === \"desc\") {\n      newSort[e.target.dataset.column] = \"\";\n    } else {\n      newSort[e.target.dataset.column] = \"asc\";\n    }\n\n    let targets = [...targetUsers]\n\n    // sort by age\n    if (newSort.age && e.target.dataset.column === \"age\") {\n      if (newSort.age === \"asc\") {\n        targets.sort((a,b) => a.dob.age - b.dob.age)\n      } else if (newSort.age === \"desc\") {\n        targets.sort((a, b) => b.dob.age - a.dob.age);\n      }\n    }\n\n    // sort by registered date\n    if (newSort.reg && e.target.dataset.column === \"reg\") {\n      if (newSort.reg === \"asc\") {\n        targets.sort((a, b) => b.registered.age - a.registered.age);\n      } else if (newSort.reg === \"desc\") {\n        targets.sort((a, b) => a.registered.age - b.registered.age);\n      }\n    }\n\n    setSort(newSort);\n    setTargetUsers(targets)\n  }\n\n  return (\n    <div className=\"App\">\n      <Selector \n        onFilter={handleFilterChange}\n        onReset={handleResetClick}\n        onCountChange={handleUserCountChange}\n        onGenerate={handleGenerateClick}\n        filter={filter} \n        countries={countries}\n        cities={cities}\n        userCount={userCount}/>\n      <Table \n        users={targetUsers} \n        sort={sort}\n        onClick={handleSortClick}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}